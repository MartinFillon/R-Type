name: Build

on:
  workflow_dispatch:
  workflow_call:

jobs:
  build-project:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    name: Build Project
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Linux Dependencies
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install libxrandr-dev libxcursor-dev libudev-dev libopenal-dev libflac-dev libvorbis-dev libgl1-mesa-dev libegl1-mesa-dev

      - name: Checkout Project
        uses: actions/checkout@v4.1.7

      - name: Cache CMake dependency source code
        uses: actions/cache@v2
        env:
          cache-name: cache-cmake-dependency-sources
        with:
          # CMake cache is at ${{github.workspace}}/build/_deps but we only will cache folders ending in '-src' to cache source code
          path: ${{github.workspace}}/build/_deps/*-src
          # Cache hash is dependent on CMakeLists files anywhere as these can change what's in the cache, as well as cmake modules files
          key: ${{ env.cache-name }}-${{ hashFiles('**/CMakeLists.txt', 'cmake/**') }}
          # it's acceptable to reuse caches for different CMakeLists content if exact match is not available and unlike build caches, we
          # don't need to restrict these by OS or compiler as it's only source code that's being cached
          restore-keys: |
            ${{ env.cache-name }}-

      - name: Cache CMake dependency build objects
        uses: actions/cache@v2
        env:
          cache-name: cache-cmake-dependency-builds
        with:
          # CMake cache is at ${{github.workspace}}/build/_deps but we only care about the folders ending in -build or -subbuild
          path: |
            ${{github.workspace}}/build/_deps/*-build
            ${{github.workspace}}/build/_deps/*-subbuild
          # Cache hash is dependent on CMakeLists files anywhere as these can change what's in the cache, as well as cmake modules files
          key: ${{ env.cache-name }}-${{ matrix.os }}-${{ hashFiles('**/CMakeLists.txt', 'cmake/**') }}
          # it's acceptable to reuse caches for different CMakeLists content if exact match is not available
          # as long as the OS and Compiler match exactly
          restore-keys: |
            ${{ env.cache-name }}-${{ matrix.os }}-

      - name: Build Project
        uses: threeal/cmake-action@v2.0.0
